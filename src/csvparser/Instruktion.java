/*
Lägg till kommentarsfält i användargränssnitt
Lägg till live-räknare
3.3: Backup funktionalitet samt Exception hantering för POI
4.0: Skriv till textfil istället för excel-fil. Ta bort möjlighet att skriva 
kommentar
*/
package csvparser;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionListener;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * About dialog of the Anagram Game application.
 */
public class Instruktion extends JDialog {
    public String version = "v1.0";
    /** Creates new form About */
    public Instruktion(JFrame parent) {
        super(parent,true);
        initComponents();
        pack();
        Rectangle parentBounds = parent.getBounds();
        Dimension size = getSize();
        // Center in the parent
        int x = Math.max(0, parentBounds.x + (parentBounds.width - size.width) / 2);
        int y = Math.max(0, parentBounds.y + (parentBounds.height - size.height) / 2);
        setLocation(new Point(x, y));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {                          
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        instruktionTextArea = new javax.swing.JTextArea();
        closeButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Användning");
        mainPanel.setLayout(new java.awt.GridBagLayout());

        mainPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(11, 11, 12, 12)));
        instruktionTextArea.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        instruktionTextArea.setColumns(35);
        instruktionTextArea.setEditable(false);
        instruktionTextArea.setLineWrap(true);
        instruktionTextArea.setRows(20);
        instruktionTextArea.setText("SmartGuard Log Modifier är ett verktyg"
                + " för att bearbeta data från VMS systemet."
                + " Bearbetning sker för att få data från olika mätpunkter på samma tidsaxel."
                + " Resultatet är en CSV fil som kan bearbetas vidare i tex excel."
                + "\n\nOm inget annat val gjorts kommer en"
                +"fil som heter C:\\temp\\VMS.csv väljas för bearbetning"
                +"(importfil)."
                +" Bearbetad fil (exportfil) kommer bli C:\\temp\\VMS_Modified"
                +"\n\nFör att välja en annan fil för bearbetning,"
                +" väljer du i menyn Arkiv/Välj importfil."
                +" För att välja en annan exportfil"
                +" väljer du i menyn Arkiv/Välj exportfil"
                +"\n\nKända buggar: Det går inte att välja en timme som"
                +" ligger utanför tiden i mätdatat."
                + " Om man har mätpunkter mellan 00:00-14:45"
                + " så kan man inte välja tiden 15 som slut."
                + " Man får välja tiden 14 som sluttid istället."
                + " Man får då data fram till 14:59:59");
        instruktionTextArea.setWrapStyleWord(true);
        instruktionTextArea.setBorder(null);
        instruktionTextArea.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(24, 0, 24, 0);
        mainPanel.add(instruktionTextArea, gridBagConstraints);

        closeButton.setMnemonic('C');
        closeButton.setText("Stäng");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        mainPanel.add(closeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

    }                        

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        setVisible(false);
        dispose();
    }                                           


    // Variables declaration - do not modify                     
    private javax.swing.JButton closeButton;
    private javax.swing.JTextArea instruktionTextArea;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration                   

}
